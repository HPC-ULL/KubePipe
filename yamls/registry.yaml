apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: kubepipe
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      delete:
        enabled: true
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: private-repository-k8s
  namespace: kubepipe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: private-repository-k8s
  template:
    metadata:
      labels:
        app: private-repository-k8s
    spec:
      nodeSelector:
        node-name: kube04
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "kubepipe"
        effect: "NoSchedule"
      volumes:
      - name: registry-vol
        hostPath:
          path: '/var/lib/ImagesVolume'
          type: Directory
      - name: config-vol
        configMap:
          name: registry-config
      containers:
      - image: registry:2.8.1
        name: private-repository-k8s
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: registry-vol
          mountPath: /var/lib/registry
        - name: config-vol
          mountPath: /etc/docker/registry
          readOnly: true


---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: private-repository-k8s
  name: private-repository-k8s
  namespace: kubepipe
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.250
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
    nodePort: 31300
  selector:
    app: private-repository-k8s
